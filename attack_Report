# Offensive Security Report: Kali Linux Attack Simulation

## üõ°Objetivo del Ejercicio

El prop√≥sito de este ejercicio fue simular un ataque en un entorno de laboratorio controlado utilizando Kali Linux. La prueba consisti√≥ en automatizar peticiones de autenticaci√≥n a una aplicaci√≥n web para comprender la gesti√≥n de cookies, cabeceras HTTP, y la interacci√≥n con formularios de inicio de sesi√≥n.

---

## ‚öô Herramientas Utilizadas

- **Kali Linux**: Sistema operativo especializado en pruebas de penetraci√≥n.  
- **`curl`**: Herramienta de l√≠nea de comandos para realizar peticiones HTTP.  
- **`cookies.txt`**: Archivo utilizado para almacenar y gestionar cookies de sesi√≥n.  
- **Terminal Bash**: Medio principal para la ejecuci√≥n de comandos en el entorno Kali.  

M√°s detalles en el archivo [`tools-used.md`](./tools-used.md).

---

## Metodolog√≠a de Ataque

1. **Configuraci√≥n del Entorno:**
    - Se prepar√≥ Kali Linux en un entorno virtualizado y seguro.
    - Se definieron los par√°metros necesarios para la prueba, como cookies y cabeceras HTTP.

2. **Comando Principal Ejecutado:**
```bash
curl -c cookies.txt -b cookies.txt -L -d "username=admin&password=example123" \
-H "Content-Type: application/x-www-form-urlencoded" \
-H "Referer:https://192.168.X.X/login.html" \
-H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)" \
http://192.168.X.X/goform/WebLogin
```

3. **Par√°metros Explicados:**
   - `-c cookies.txt`: Guarda cookies en el archivo especificado.
   - `-b cookies.txt`: Utiliza las cookies almacenadas previamente.
   - `-L`: Sigue redirecciones en las peticiones HTTP.
   - `-d`: Define los datos enviados en la petici√≥n POST.
   - `-H`: A√±ade cabeceras HTTP personalizadas para simular una interacci√≥n real.

---

## Dificultades y Soluciones

- **Problema:** Error en la estructura de los par√©ntesis en el comando.  
  **Soluci√≥n:** Se eliminaron los par√©ntesis innecesarios, y se ajustaron las comillas.

- **Problema:** Error en la gesti√≥n de cookies durante las peticiones.  
  **Soluci√≥n:** Se verific√≥ la correcta generaci√≥n y lectura del archivo `cookies.txt`.

- **Problema:** Comando `curl` no segu√≠a redirecciones correctamente.  
  **Soluci√≥n:** Se a√±adi√≥ el par√°metro `-L` para asegurar el seguimiento de redirecciones.

---

##  Lecciones Aprendidas

1. La correcta gesti√≥n de cookies es esencial para la automatizaci√≥n de peticiones autenticadas.  
2. La estructura de las cabeceras HTTP influye en el √©xito de las interacciones con aplicaciones web.  
3. La importancia de probar comandos en un entorno controlado antes de su aplicaci√≥n pr√°ctica.

---

##  Conclusi√≥n

Este ejercicio permiti√≥ fortalecer habilidades en el uso de `curl` para automatizar peticiones web y entender mejor la gesti√≥n de sesiones mediante cookies. Adem√°s, destac√≥ la importancia de la sintaxis correcta en los comandos de terminal.

---

##  Capturas de Pantalla

Las im√°genes relacionadas con el proceso est√°n almacenadas en la carpeta [`assets/`](./assets).

---

> **Nota:** Toda la informaci√≥n presentada ha sido anonimizada para evitar la exposici√≥n de datos sensibles o privados.


